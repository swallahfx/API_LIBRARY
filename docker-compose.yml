# ============================================================================
# docker-compose.yml - Development Environment
# ============================================================================

# Create: docker-compose.yml
version: '3.8'

services:
  # Main API application
  api:
    build: .
    container_name: ai_library_api
    restart: unless-stopped
    ports:
      - "8088:8088"
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/ai_library?authSource=admin
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEBUG=true
    volumes:
      - ./data/uploads:/app/data/uploads
      - ./data/vector_stores:/app/data/vector_stores
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - ai_library_network
    

  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: ai_library_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ai_library
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ai_library_network
   

  # Redis cache
  redis:
    image: redis:7.2-alpine
    container_name: ai_library_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - ai_library_network
  

volumes:
  mongodb_data:
  redis_data:

networks:
  ai_library_network:
    driver: bridge
